//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharacterLookDirectionListenerComponent characterLookDirectionListener { get { return (CharacterLookDirectionListenerComponent)GetComponent(GameComponentsLookup.CharacterLookDirectionListener); } }
    public bool hasCharacterLookDirectionListener { get { return HasComponent(GameComponentsLookup.CharacterLookDirectionListener); } }

    public void AddCharacterLookDirectionListener(System.Collections.Generic.List<ICharacterLookDirectionListener> newValue) {
        var index = GameComponentsLookup.CharacterLookDirectionListener;
        var component = (CharacterLookDirectionListenerComponent)CreateComponent(index, typeof(CharacterLookDirectionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCharacterLookDirectionListener(System.Collections.Generic.List<ICharacterLookDirectionListener> newValue) {
        var index = GameComponentsLookup.CharacterLookDirectionListener;
        var component = (CharacterLookDirectionListenerComponent)CreateComponent(index, typeof(CharacterLookDirectionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterLookDirectionListener() {
        RemoveComponent(GameComponentsLookup.CharacterLookDirectionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharacterLookDirectionListener;

    public static Entitas.IMatcher<GameEntity> CharacterLookDirectionListener {
        get {
            if (_matcherCharacterLookDirectionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharacterLookDirectionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharacterLookDirectionListener = matcher;
            }

            return _matcherCharacterLookDirectionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddCharacterLookDirectionListener(ICharacterLookDirectionListener value) {
        var listeners = hasCharacterLookDirectionListener
            ? characterLookDirectionListener.value
            : new System.Collections.Generic.List<ICharacterLookDirectionListener>();
        listeners.Add(value);
        ReplaceCharacterLookDirectionListener(listeners);
    }

    public void RemoveCharacterLookDirectionListener(ICharacterLookDirectionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = characterLookDirectionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCharacterLookDirectionListener();
        } else {
            ReplaceCharacterLookDirectionListener(listeners);
        }
    }
}
