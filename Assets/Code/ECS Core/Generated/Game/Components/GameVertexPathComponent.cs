//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public VertexPathComponent vertexPath { get { return (VertexPathComponent)GetComponent(GameComponentsLookup.VertexPath); } }
    public bool hasVertexPath { get { return HasComponent(GameComponentsLookup.VertexPath); } }

    public GameEntity AddVertexPath(Rewind.SharedData.VertexPathAdapter newValue) {
        var index = GameComponentsLookup.VertexPath;
        var component = (VertexPathComponent)CreateComponent(index, typeof(VertexPathComponent));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceVertexPath(Rewind.SharedData.VertexPathAdapter newValue) {
        var index = GameComponentsLookup.VertexPath;
        var component = (VertexPathComponent)CreateComponent(index, typeof(VertexPathComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveVertexPath() {
        RemoveComponent(GameComponentsLookup.VertexPath);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVertexPath;

    public static Entitas.IMatcher<GameEntity> VertexPath {
        get {
            if (_matcherVertexPath == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.VertexPath);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVertexPath = matcher;
            }

            return _matcherVertexPath;
        }
    }
}
