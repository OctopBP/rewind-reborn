//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GearTypeAStateComponent gearTypeAState { get { return (GearTypeAStateComponent)GetComponent(GameComponentsLookup.GearTypeAState); } }
    public bool hasGearTypeAState { get { return HasComponent(GameComponentsLookup.GearTypeAState); } }

    public void AddGearTypeAState(Rewind.ECSCore.Enums.GearTypeAState newValue) {
        var index = GameComponentsLookup.GearTypeAState;
        var component = (GearTypeAStateComponent)CreateComponent(index, typeof(GearTypeAStateComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGearTypeAState(Rewind.ECSCore.Enums.GearTypeAState newValue) {
        var index = GameComponentsLookup.GearTypeAState;
        var component = (GearTypeAStateComponent)CreateComponent(index, typeof(GearTypeAStateComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGearTypeAState() {
        RemoveComponent(GameComponentsLookup.GearTypeAState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGearTypeAState;

    public static Entitas.IMatcher<GameEntity> GearTypeAState {
        get {
            if (_matcherGearTypeAState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GearTypeAState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGearTypeAState = matcher;
            }

            return _matcherGearTypeAState;
        }
    }
}
