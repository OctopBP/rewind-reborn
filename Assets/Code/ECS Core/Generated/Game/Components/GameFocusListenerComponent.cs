//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LanguageExt.Option<FocusListenerComponent> maybeFocusListener { get { return HasComponent(GameComponentsLookup.FocusListener) ? LanguageExt.Option<FocusListenerComponent>.Some((FocusListenerComponent)GetComponent(GameComponentsLookup.FocusListener)) : LanguageExt.Option<FocusListenerComponent>.None; } }
    public FocusListenerComponent focusListener { get { return (FocusListenerComponent)GetComponent(GameComponentsLookup.FocusListener); } }
    public bool hasFocusListener { get { return HasComponent(GameComponentsLookup.FocusListener); } }

    public GameEntity AddFocusListener(System.Collections.Generic.List<IFocusListener> newValue) {
        var index = GameComponentsLookup.FocusListener;
        var component = (FocusListenerComponent)CreateComponent(index, typeof(FocusListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceFocusListener(System.Collections.Generic.List<IFocusListener> newValue) {
        var index = GameComponentsLookup.FocusListener;
        var component = (FocusListenerComponent)CreateComponent(index, typeof(FocusListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveFocusListener() {
        RemoveComponent(GameComponentsLookup.FocusListener);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFocusListener;

    public static Entitas.IMatcher<GameEntity> FocusListener {
        get {
            if (_matcherFocusListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FocusListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFocusListener = matcher;
            }

            return _matcherFocusListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameEntity AddFocusListener(IFocusListener value) {
        var listeners = hasFocusListener
            ? focusListener.value
            : new System.Collections.Generic.List<IFocusListener>();
        listeners.Add(value);
        ReplaceFocusListener(listeners);
        return this;
    }

    public GameEntity RemoveFocusListener(IFocusListener value, bool removeComponentWhenEmpty = true) {
        var listeners = focusListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveFocusListener();
        } else {
            ReplaceFocusListener(listeners);
        }
        return this;
    }
}
