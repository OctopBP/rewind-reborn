//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LanguageExt.Option<GearTypeALockedRemovedListenerComponent> maybeGearTypeALockedRemovedListener { get { return HasComponent(GameComponentsLookup.GearTypeALockedRemovedListener) ? LanguageExt.Option<GearTypeALockedRemovedListenerComponent>.Some((GearTypeALockedRemovedListenerComponent)GetComponent(GameComponentsLookup.GearTypeALockedRemovedListener)) : LanguageExt.Option<GearTypeALockedRemovedListenerComponent>.None; } }
    public LanguageExt.Option<System.Collections.Generic.List<IGearTypeALockedRemovedListener>> maybeGearTypeALockedRemovedListener_value { get { return maybeGearTypeALockedRemovedListener.Map(_ => _.value); } }
    public GearTypeALockedRemovedListenerComponent gearTypeALockedRemovedListener { get { return (GearTypeALockedRemovedListenerComponent)GetComponent(GameComponentsLookup.GearTypeALockedRemovedListener); } }
    public bool hasGearTypeALockedRemovedListener { get { return HasComponent(GameComponentsLookup.GearTypeALockedRemovedListener); } }

    public GameEntity AddGearTypeALockedRemovedListener(System.Collections.Generic.List<IGearTypeALockedRemovedListener> newValue) {
        var index = GameComponentsLookup.GearTypeALockedRemovedListener;
        var component = (GearTypeALockedRemovedListenerComponent)CreateComponent(index, typeof(GearTypeALockedRemovedListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceGearTypeALockedRemovedListener(System.Collections.Generic.List<IGearTypeALockedRemovedListener> newValue) {
        var index = GameComponentsLookup.GearTypeALockedRemovedListener;
        var component = (GearTypeALockedRemovedListenerComponent)CreateComponent(index, typeof(GearTypeALockedRemovedListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveGearTypeALockedRemovedListener() {
        RemoveComponent(GameComponentsLookup.GearTypeALockedRemovedListener);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGearTypeALockedRemovedListener;

    public static Entitas.IMatcher<GameEntity> GearTypeALockedRemovedListener {
        get {
            if (_matcherGearTypeALockedRemovedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GearTypeALockedRemovedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGearTypeALockedRemovedListener = matcher;
            }

            return _matcherGearTypeALockedRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameEntity AddGearTypeALockedRemovedListener(IGearTypeALockedRemovedListener value) {
        var listeners = hasGearTypeALockedRemovedListener
            ? gearTypeALockedRemovedListener.value
            : new System.Collections.Generic.List<IGearTypeALockedRemovedListener>();
        listeners.Add(value);
        ReplaceGearTypeALockedRemovedListener(listeners);
        return this;
    }

    public GameEntity RemoveGearTypeALockedRemovedListener(IGearTypeALockedRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gearTypeALockedRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGearTypeALockedRemovedListener();
        } else {
            ReplaceGearTypeALockedRemovedListener(listeners);
        }
        return this;
    }
}
