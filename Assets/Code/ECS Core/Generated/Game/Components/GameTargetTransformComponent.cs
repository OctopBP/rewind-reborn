//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TargetTransformComponent targetTransform { get { return (TargetTransformComponent)GetComponent(GameComponentsLookup.TargetTransform); } }
    public bool hasTargetTransform { get { return HasComponent(GameComponentsLookup.TargetTransform); } }

    public GameEntity AddTargetTransform(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.TargetTransform;
        var component = (TargetTransformComponent)CreateComponent(index, typeof(TargetTransformComponent));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceTargetTransform(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.TargetTransform;
        var component = (TargetTransformComponent)CreateComponent(index, typeof(TargetTransformComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveTargetTransform() {
        RemoveComponent(GameComponentsLookup.TargetTransform);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTargetTransform;

    public static Entitas.IMatcher<GameEntity> TargetTransform {
        get {
            if (_matcherTargetTransform == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TargetTransform);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTargetTransform = matcher;
            }

            return _matcherTargetTransform;
        }
    }
}
