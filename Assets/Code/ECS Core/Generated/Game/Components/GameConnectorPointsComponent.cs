//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ConnectorPointsComponent connectorPoints { get { return (ConnectorPointsComponent)GetComponent(GameComponentsLookup.ConnectorPoints); } }
    public bool hasConnectorPoints { get { return HasComponent(GameComponentsLookup.ConnectorPoints); } }

    public void AddConnectorPoints(PathPointType newPoint1, PathPointType newPoint2) {
        var index = GameComponentsLookup.ConnectorPoints;
        var component = (ConnectorPointsComponent)CreateComponent(index, typeof(ConnectorPointsComponent));
        component.point1 = newPoint1;
        component.point2 = newPoint2;
        AddComponent(index, component);
    }

    public void ReplaceConnectorPoints(PathPointType newPoint1, PathPointType newPoint2) {
        var index = GameComponentsLookup.ConnectorPoints;
        var component = (ConnectorPointsComponent)CreateComponent(index, typeof(ConnectorPointsComponent));
        component.point1 = newPoint1;
        component.point2 = newPoint2;
        ReplaceComponent(index, component);
    }

    public void RemoveConnectorPoints() {
        RemoveComponent(GameComponentsLookup.ConnectorPoints);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherConnectorPoints;

    public static Entitas.IMatcher<GameEntity> ConnectorPoints {
        get {
            if (_matcherConnectorPoints == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ConnectorPoints);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherConnectorPoints = matcher;
            }

            return _matcherConnectorPoints;
        }
    }
}
