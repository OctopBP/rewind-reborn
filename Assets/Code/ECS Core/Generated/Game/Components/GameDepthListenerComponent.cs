//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LanguageExt.Option<DepthListenerComponent> maybeDepthListener { get { return HasComponent(GameComponentsLookup.DepthListener) ? LanguageExt.Option<DepthListenerComponent>.Some((DepthListenerComponent)GetComponent(GameComponentsLookup.DepthListener)) : LanguageExt.Option<DepthListenerComponent>.None; } }
    public DepthListenerComponent depthListener { get { return (DepthListenerComponent)GetComponent(GameComponentsLookup.DepthListener); } }
    public bool hasDepthListener { get { return HasComponent(GameComponentsLookup.DepthListener); } }

    public GameEntity AddDepthListener(System.Collections.Generic.List<IDepthListener> newValue) {
        var index = GameComponentsLookup.DepthListener;
        var component = (DepthListenerComponent)CreateComponent(index, typeof(DepthListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceDepthListener(System.Collections.Generic.List<IDepthListener> newValue) {
        var index = GameComponentsLookup.DepthListener;
        var component = (DepthListenerComponent)CreateComponent(index, typeof(DepthListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveDepthListener() {
        RemoveComponent(GameComponentsLookup.DepthListener);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDepthListener;

    public static Entitas.IMatcher<GameEntity> DepthListener {
        get {
            if (_matcherDepthListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DepthListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDepthListener = matcher;
            }

            return _matcherDepthListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameEntity AddDepthListener(IDepthListener value) {
        var listeners = hasDepthListener
            ? depthListener.value
            : new System.Collections.Generic.List<IDepthListener>();
        listeners.Add(value);
        ReplaceDepthListener(listeners);
        return this;
    }

    public GameEntity RemoveDepthListener(IDepthListener value, bool removeComponentWhenEmpty = true) {
        var listeners = depthListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveDepthListener();
        } else {
            ReplaceDepthListener(listeners);
        }
        return this;
    }
}
