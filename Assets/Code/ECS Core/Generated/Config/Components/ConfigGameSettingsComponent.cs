//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity gameSettingsEntity { get { return GetGroup(ConfigMatcher.GameSettings).GetSingleEntity(); } }
    public GameSettingsComponent gameSettings { get { return gameSettingsEntity.gameSettings; } }
    public bool hasGameSettings { get { return gameSettingsEntity != null; } }

    public ConfigEntity SetGameSettings(Rewind.SharedData.GameSettingsData newValue) {
        if (hasGameSettings) {
            throw new Entitas.EntitasException("Could not set GameSettings!\n" + this + " already has an entity with GameSettingsComponent!",
                "You should check if the context already has a gameSettingsEntity before setting it or use context.ReplaceGameSettings().");
        }
        var entity = CreateEntity();
        entity.AddGameSettings(newValue);
        return entity;
    }

    public void ReplaceGameSettings(Rewind.SharedData.GameSettingsData newValue) {
        var entity = gameSettingsEntity;
        if (entity == null) {
            entity = SetGameSettings(newValue);
        } else {
            entity.ReplaceGameSettings(newValue);
        }
    }

    public void RemoveGameSettings() {
        gameSettingsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public LanguageExt.Option<GameSettingsComponent> maybeGameSettings { get { return HasComponent(ConfigComponentsLookup.GameSettings) ? LanguageExt.Option<GameSettingsComponent>.Some((GameSettingsComponent)GetComponent(ConfigComponentsLookup.GameSettings)) : LanguageExt.Option<GameSettingsComponent>.None; } }
    public LanguageExt.Option<Rewind.SharedData.GameSettingsData> maybeGameSettings_value { get { return maybeGameSettings.Map(_ => _.value); } }
    public GameSettingsComponent gameSettings { get { return (GameSettingsComponent)GetComponent(ConfigComponentsLookup.GameSettings); } }
    public bool hasGameSettings { get { return HasComponent(ConfigComponentsLookup.GameSettings); } }

    public ConfigEntity AddGameSettings(Rewind.SharedData.GameSettingsData newValue) {
        var index = ConfigComponentsLookup.GameSettings;
        var component = (GameSettingsComponent)CreateComponent(index, typeof(GameSettingsComponent));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public ConfigEntity ReplaceGameSettings(Rewind.SharedData.GameSettingsData newValue) {
        var index = ConfigComponentsLookup.GameSettings;
        var component = (GameSettingsComponent)CreateComponent(index, typeof(GameSettingsComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public ConfigEntity RemoveGameSettings() {
        RemoveComponent(ConfigComponentsLookup.GameSettings);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherGameSettings;

    public static Entitas.IMatcher<ConfigEntity> GameSettings {
        get {
            if (_matcherGameSettings == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.GameSettings);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherGameSettings = matcher;
            }

            return _matcherGameSettings;
        }
    }
}
