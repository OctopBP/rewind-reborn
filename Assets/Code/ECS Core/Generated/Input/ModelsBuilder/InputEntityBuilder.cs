//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Octop.ComponentModel.CodeGenerators.EntityBuilderGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.Linq;
using Sirenix.OdinInspector;
using Rewind.Services;

namespace Octop.ComponentModel {
    public class InputEntityBuilder : MonoBehaviour {
        [SerializeReference, ValueDropdown(nameof(Models))] List<IInputComponentModel> models = new();
        [SerializeReference, ValueDropdown(nameof(Listeners))] List<IInputComponentListener> listeners = new();

	    InputEntity entity;

		static IEnumerable Models = new ValueDropdownList<IInputComponentModel>() {
            { "Time", new InputTimeModel() },
            { "Input", new InputModel() }
        };

	    static IEnumerable Listeners = new ValueDropdownList<IInputComponentListener>() {
            { "Time", new InputTimeListener() }
        };

        void Awake() {
		    entity = Contexts.sharedInstance.input.CreateEntity();
		    models.Aggregate(entity, (e, model) => model.Initialize(e));
            registerListeners();
	    }

        void OnDestroy() {
	        unregisterListeners();
        }

        void registerListeners() => listeners.ForEach(l => l.Register(entity));
        void unregisterListeners() => listeners.ForEach(l => l.Unregister(entity));
    }
}