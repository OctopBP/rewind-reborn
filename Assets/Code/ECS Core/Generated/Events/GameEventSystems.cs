//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventSystemsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed class GameEventSystems : Feature {

    public GameEventSystems(Contexts contexts) {
        Add(new ActiveEventSystem(contexts)); // priority: 0
        Add(new ActiveSecondEventSystem(contexts)); // priority: 0
        Add(new ButtonAStateEventSystem(contexts)); // priority: 0
        Add(new CharacterLookDirectionEventSystem(contexts)); // priority: 0
        Add(new CharacterStateEventSystem(contexts)); // priority: 0
        Add(new AnyClockStateEventSystem(contexts)); // priority: 0
        Add(new ConnectorStateEventSystem(contexts)); // priority: 0
        Add(new DepthEventSystem(contexts)); // priority: 0
        Add(new DoorAStateEventSystem(contexts)); // priority: 0
        Add(new FocusEventSystem(contexts)); // priority: 0
        Add(new GearTypeALockedEventSystem(contexts)); // priority: 0
        Add(new GearTypeAStateEventSystem(contexts)); // priority: 0
        Add(new GearTypeCLockedEventSystem(contexts)); // priority: 0
        Add(new GearTypeCStateEventSystem(contexts)); // priority: 0
        Add(new HoldedAtTimeEventSystem(contexts)); // priority: 0
        Add(new LeftPathDirectionBlocksEventSystem(contexts)); // priority: 0
        Add(new LeverAStateEventSystem(contexts)); // priority: 0
        Add(new LocalPositionEventSystem(contexts)); // priority: 0
        Add(new MoveCompleteEventSystem(contexts)); // priority: 0
        Add(new PendulumStateEventSystem(contexts)); // priority: 0
        Add(new PlatformAStateEventSystem(contexts)); // priority: 0
        Add(new PointTriggerReachedEventSystem(contexts)); // priority: 0
        Add(new PositionEventSystem(contexts)); // priority: 0
        Add(new RotationEventSystem(contexts)); // priority: 0
        Add(new GameTimeEventSystem(contexts)); // priority: 0
        Add(new ActiveRemovedEventSystem(contexts)); // priority: 1
        Add(new ActiveSecondRemovedEventSystem(contexts)); // priority: 1
        Add(new FocusRemovedEventSystem(contexts)); // priority: 1
        Add(new GearTypeALockedRemovedEventSystem(contexts)); // priority: 1
        Add(new GearTypeCLockedRemovedEventSystem(contexts)); // priority: 1
        Add(new HoldedAtTimeRemovedEventSystem(contexts)); // priority: 1
    }
}
